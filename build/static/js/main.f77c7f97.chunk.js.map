{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","TodoItem","getStyle","borderBottom","props","todo","completed","this","id","title","type","onChange","markComplete","bind","onClick","deleteTodoItem","btnStyle","Component","border","borderRadius","cursor","float","Todos","todos","map","key","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","target","name","value","display","flex","placeholder","className","stylr","About","Fragment","App","axios","delete","then","res","filter","post","data","get","console","log","exact","path","render","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f77c7f97.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n  return (\n    <header style={headerStyle}>\n    <h1>Todo List</h1>\n    <Link style={linkStyle} to=\"/\">Home</Link> | <Link\n    style={linkStyle} to=\"/about\">About</Link>\n    </header>\n  );\n}\n\nconst headerStyle ={\n  background: '#333',\n  color: '#fff',\n  textAlign: 'center',\n  padding: '10px',\n\n}\n\nconst linkStyle = {\n  color: '#fff',\n  textDecoration: 'none',\n}\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n      return {\n        background: '#f4f4f4',\n        padding: '10px',\n        borderBottom: '1px #ccc dotted',\n        textDecoration: this.props.todo.completed ?\n        'line-through' : 'none'\n      }\n    }\n\n  render() {\n    const { id, title } = this.props.todo;\n    return (\n      <div style= { this.getStyle() }>\n        <p>\n        <input type=\"checkbox\" onChange={this.props.markComplete.bind\n          (this, id)}/> {' '}\n        { title }\n        <button onClick={this.props.deleteTodoItem.bind(this, id)}\n        style={btnStyle}>x</button>\n        </p>\n      </div>\n    );\n  }\n}\n\n// PropTypes\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  deleteTodoItem: PropTypes.func.isRequired,\n}\n\nconst btnStyle = {\n  background: '#ff0000',\n  color: '#fff',\n  border: 'none',\n  padding: '5px 9px',\n  borderRadius: '50%',\n  cursor: 'pointer',\n  float: 'right',\n}\nexport default TodoItem;\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n\n  render() {\n    return this.props.todos.map((todo) => (\n        <TodoItem key={ todo.id } todo={ todo } markComplete=\n        { this.props.markComplete } deleteTodoItem={this.props.deleteTodoItem}/>\n      ));\n  }\n}\n\n// PropTypes\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  deleteTodoItem: PropTypes.func.isRequired,\n}\n\nexport default Todos;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class AddTodo extends Component {\n  state = {\n    title: '',\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({ title: ''})\n  }\n\n  onChange = (e) => this.setState(\n    { [e.target.name]: e.target.value });\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\n        <input\n         type=\"text\"\n         name=\"title\"\n         style={{ flex: '10', padding: '5px' }}\n         placeholder=\"Add Todo ...\"\n         value={this.state.title}\n         onChange={this.onChange}\n         />\n         <input\n         type=\"submit\"\n         value=\"Submit\"\n         className=\"btn\"\n         stylr={{flex: '1'}}\n         />\n      </form>\n    )\n  }\n}\n\n//PropTypes\n// PropTypes\nAddTodo.propTypes = {\n  AddTodo: PropTypes.func.isRequired,\n}\nexport default AddTodo;\n","import React from 'react';\n\nfunction About() {\n  return (\n    <React.Fragment>\n    <h1>About</h1>\n    <p>This is the TodoList app\n     v1.0.0. It is part of a React Crash Course</p>\n    </React.Fragment>\n  )\n}\n\n\nexport default About;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header'\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About'\nimport uuid from 'uuid';\nimport axios from 'axios';\n\nclass App extends Component {\n    state = {\n      todos: [],\n    };\n\n    componentDidMount() {\n      axios.get('https://jsonplaceholder.typicode.com/todos?_limit=0')\n      .then(res => this.setState({ todos: res.data}))\n    }\n// Toggle Complete\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if(todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    }) });\n  }\n\n// delete todo TodoItem\ndeleteTodoItem = (id) => {\n  axios.delete('https://jsonplaceholder.typicode.com/todos/${id}')\n  .then(res => this.setState({ todos: [...this.state.todos.filter(todo =>\n    todo.id !== id)] }));\n\n}\n\n//Add todo\naddTodo = (title) => {\n/*  const newTodo = {\n    id: uuid.v4(),\n    title,\n    completed: false,\n  } */\n  axios.post('https://jsonplaceholder.typicode.com/todos', {\n    title,\n    completed: false,\n  })\n    .then(res => this.setState({todos: [...this.state.todos, res.data]}));\n//   this.setState({todos: [...this.state.todos, newTodo]})\n}\n  render() {\n    console.log(this.state.todos);\n  return (\n    <Router>\n    <div className=\"App\">\n      <div className=\"container\">\n        <Header />\n        <Route exact path=\"/\" render={props => (\n          <React.Fragment>\n            <AddTodo addTodo={this.addTodo}/>\n            <Todos todos={this.state.todos} markComplete={this.markComplete}\n             deleteTodoItem={this.deleteTodoItem}/>\n          </React.Fragment>\n        )} />\n        <Route path=\"/about\" component={About}>\n        </Route>\n\n      </div>\n    </div>\n    </Router>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}